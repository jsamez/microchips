
StopWatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000004be  00000552  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  0080010a  0080010a  0000055c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000055c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000058c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012a1  00000000  00000000  000006c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cce  00000000  00000000  00001965  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008ca  00000000  00000000  00002633  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00002f00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000064c  00000000  00000000  000030bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004c9  00000000  00000000  00003708  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003bd1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	e5 c1       	rjmp	.+970    	; 0x40c <__vector_16>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee eb       	ldi	r30, 0xBE	; 190
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 31       	cpi	r26, 0x1C	; 28
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	cd d1       	rcall	.+922    	; 0x45e <main>
  c4:	fa c1       	rjmp	.+1012   	; 0x4ba <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <StopWatch_init>:
button_t btnMode, btnReset;
uint16_t counter;
uint8_t StopwatchState;

void StopWatch_init(){
	FND_init();
  c8:	81 d0       	rcall	.+258    	; 0x1cc <FND_init>
	Button_init(&btnMode, &DDRA, &PINA, 0);
  ca:	20 e0       	ldi	r18, 0x00	; 0
  cc:	49 e3       	ldi	r20, 0x39	; 57
  ce:	50 e0       	ldi	r21, 0x00	; 0
  d0:	6a e3       	ldi	r22, 0x3A	; 58
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	86 e1       	ldi	r24, 0x16	; 22
  d6:	91 e0       	ldi	r25, 0x01	; 1
  d8:	41 d0       	rcall	.+130    	; 0x15c <Button_init>
	Button_init(&btnReset, &DDRA, &PINA, 1);
  da:	21 e0       	ldi	r18, 0x01	; 1
  dc:	49 e3       	ldi	r20, 0x39	; 57
  de:	50 e0       	ldi	r21, 0x00	; 0
  e0:	6a e3       	ldi	r22, 0x3A	; 58
  e2:	70 e0       	ldi	r23, 0x00	; 0
  e4:	8e e0       	ldi	r24, 0x0E	; 14
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	39 d0       	rcall	.+114    	; 0x15c <Button_init>
	counter = 0;
  ea:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <counter+0x1>
  ee:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <counter>
	StopwatchState = Stop;
  f2:	81 e0       	ldi	r24, 0x01	; 1
  f4:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <StopwatchState>
  f8:	08 95       	ret

000000fa <StopWatch_run>:
}

void StopWatch_run(){
	switch (StopwatchState){
  fa:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <StopwatchState>
  fe:	88 23       	and	r24, r24
 100:	c1 f0       	breq	.+48     	; 0x132 <StopWatch_run+0x38>
 102:	81 30       	cpi	r24, 0x01	; 1
 104:	51 f5       	brne	.+84     	; 0x15a <StopWatch_run+0x60>
		
		case Stop:
		FND_ISR_Process();
 106:	7c d1       	rcall	.+760    	; 0x400 <FND_ISR_Process>
		if(button_getstate(&btnMode) == ACT_RELEASED)
 108:	86 e1       	ldi	r24, 0x16	; 22
 10a:	91 e0       	ldi	r25, 0x01	; 1
 10c:	34 d0       	rcall	.+104    	; 0x176 <button_getstate>
 10e:	81 30       	cpi	r24, 0x01	; 1
 110:	19 f4       	brne	.+6      	; 0x118 <StopWatch_run+0x1e>
		{
			StopwatchState = Start;
 112:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <StopwatchState>
 116:	08 95       	ret
		}
		else if (button_getstate(&btnReset) == ACT_RELEASED)
 118:	8e e0       	ldi	r24, 0x0E	; 14
 11a:	91 e0       	ldi	r25, 0x01	; 1
 11c:	2c d0       	rcall	.+88     	; 0x176 <button_getstate>
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	e1 f4       	brne	.+56     	; 0x15a <StopWatch_run+0x60>
		{
			counter = 0;
 122:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <counter+0x1>
 126:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <counter>
			FND_setFndData(counter);
 12a:	80 e0       	ldi	r24, 0x00	; 0
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	63 c1       	rjmp	.+710    	; 0x3f6 <FND_setFndData>
		}
		break;
		
		case Start:
		FND_ISR_Process();
 130:	08 95       	ret
 132:	66 d1       	rcall	.+716    	; 0x400 <FND_ISR_Process>
		FND_setFndData(counter++);
 134:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <counter>
 138:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <counter+0x1>
 13c:	9c 01       	movw	r18, r24
 13e:	2f 5f       	subi	r18, 0xFF	; 255
 140:	3f 4f       	sbci	r19, 0xFF	; 255
 142:	30 93 15 01 	sts	0x0115, r19	; 0x800115 <counter+0x1>
 146:	20 93 14 01 	sts	0x0114, r18	; 0x800114 <counter>
		if(button_getstate(&btnMode) == ACT_RELEASED)
 14a:	55 d1       	rcall	.+682    	; 0x3f6 <FND_setFndData>
 14c:	86 e1       	ldi	r24, 0x16	; 22
 14e:	91 e0       	ldi	r25, 0x01	; 1
 150:	12 d0       	rcall	.+36     	; 0x176 <button_getstate>
 152:	81 30       	cpi	r24, 0x01	; 1
 154:	11 f4       	brne	.+4      	; 0x15a <StopWatch_run+0x60>
		{
			StopwatchState = Stop;
 156:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <StopwatchState>
 15a:	08 95       	ret

0000015c <Button_init>:
 15c:	fc 01       	movw	r30, r24
 15e:	cb 01       	movw	r24, r22
 160:	71 83       	std	Z+1, r23	; 0x01
 162:	60 83       	st	Z, r22
 164:	53 83       	std	Z+3, r21	; 0x03
 166:	42 83       	std	Z+2, r20	; 0x02
 168:	25 83       	std	Z+5, r18	; 0x05
 16a:	31 e0       	ldi	r19, 0x01	; 1
 16c:	34 83       	std	Z+4, r19	; 0x04
 16e:	42 2f       	mov	r20, r18
 170:	61 e0       	ldi	r22, 0x01	; 1
 172:	79 c1       	rjmp	.+754    	; 0x466 <Gpio_initPin>
 174:	08 95       	ret

00000176 <button_getstate>:
 176:	fc 01       	movw	r30, r24
 178:	a2 81       	ldd	r26, Z+2	; 0x02
 17a:	b3 81       	ldd	r27, Z+3	; 0x03
 17c:	8c 91       	ld	r24, X
 17e:	21 e0       	ldi	r18, 0x01	; 1
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	05 80       	ldd	r0, Z+5	; 0x05
 184:	02 c0       	rjmp	.+4      	; 0x18a <button_getstate+0x14>
 186:	22 0f       	add	r18, r18
 188:	33 1f       	adc	r19, r19
 18a:	0a 94       	dec	r0
 18c:	e2 f7       	brpl	.-8      	; 0x186 <button_getstate+0x10>
 18e:	28 23       	and	r18, r24
 190:	59 f4       	brne	.+22     	; 0x1a8 <button_getstate+0x32>
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	84 83       	std	Z+4, r24	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 196:	8f e3       	ldi	r24, 0x3F	; 63
 198:	9c e9       	ldi	r25, 0x9C	; 156
 19a:	01 97       	sbiw	r24, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <button_getstate+0x24>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <button_getstate+0x2a>
 1a0:	00 00       	nop
 1a2:	14 82       	std	Z+4, r1	; 0x04
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	08 95       	ret
 1a8:	22 23       	and	r18, r18
 1aa:	61 f0       	breq	.+24     	; 0x1c4 <button_getstate+0x4e>
 1ac:	84 81       	ldd	r24, Z+4	; 0x04
 1ae:	81 11       	cpse	r24, r1
 1b0:	0b c0       	rjmp	.+22     	; 0x1c8 <button_getstate+0x52>
 1b2:	8f e3       	ldi	r24, 0x3F	; 63
 1b4:	9c e9       	ldi	r25, 0x9C	; 156
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <button_getstate+0x40>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <button_getstate+0x46>
 1bc:	00 00       	nop
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	84 83       	std	Z+4, r24	; 0x04
 1c2:	08 95       	ret
 1c4:	82 e0       	ldi	r24, 0x02	; 2
 1c6:	08 95       	ret
 1c8:	82 e0       	ldi	r24, 0x02	; 2
 1ca:	08 95       	ret

000001cc <FND_init>:
 1cc:	82 b1       	in	r24, 0x02	; 2
 1ce:	80 6f       	ori	r24, 0xF0	; 240
 1d0:	82 b9       	out	0x02, r24	; 2
 1d2:	8f ef       	ldi	r24, 0xFF	; 255
 1d4:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 1d8:	08 95       	ret

000001da <FND_dispNum>:
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	cd b7       	in	r28, 0x3d	; 61
 1e0:	de b7       	in	r29, 0x3e	; 62
 1e2:	2a 97       	sbiw	r28, 0x0a	; 10
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	f8 94       	cli
 1e8:	de bf       	out	0x3e, r29	; 62
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	cd bf       	out	0x3d, r28	; 61
 1ee:	ac 01       	movw	r20, r24
 1f0:	8a e0       	ldi	r24, 0x0A	; 10
 1f2:	e0 e0       	ldi	r30, 0x00	; 0
 1f4:	f1 e0       	ldi	r31, 0x01	; 1
 1f6:	de 01       	movw	r26, r28
 1f8:	11 96       	adiw	r26, 0x01	; 1
 1fa:	01 90       	ld	r0, Z+
 1fc:	0d 92       	st	X+, r0
 1fe:	8a 95       	dec	r24
 200:	e1 f7       	brne	.-8      	; 0x1fa <FND_dispNum+0x20>
 202:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	01 96       	adiw	r24, 0x01	; 1
 20a:	83 70       	andi	r24, 0x03	; 3
 20c:	90 78       	andi	r25, 0x80	; 128
 20e:	99 23       	and	r25, r25
 210:	24 f4       	brge	.+8      	; 0x21a <FND_dispNum+0x40>
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	8c 6f       	ori	r24, 0xFC	; 252
 216:	9f 6f       	ori	r25, 0xFF	; 255
 218:	01 96       	adiw	r24, 0x01	; 1
 21a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 21e:	81 30       	cpi	r24, 0x01	; 1
 220:	09 f4       	brne	.+2      	; 0x224 <FND_dispNum+0x4a>
 222:	46 c0       	rjmp	.+140    	; 0x2b0 <FND_dispNum+0xd6>
 224:	38 f0       	brcs	.+14     	; 0x234 <FND_dispNum+0x5a>
 226:	82 30       	cpi	r24, 0x02	; 2
 228:	09 f4       	brne	.+2      	; 0x22c <FND_dispNum+0x52>
 22a:	7a c0       	rjmp	.+244    	; 0x320 <FND_dispNum+0x146>
 22c:	83 30       	cpi	r24, 0x03	; 3
 22e:	09 f4       	brne	.+2      	; 0x232 <FND_dispNum+0x58>
 230:	ad c0       	rjmp	.+346    	; 0x38c <FND_dispNum+0x1b2>
 232:	d8 c0       	rjmp	.+432    	; 0x3e4 <FND_dispNum+0x20a>
 234:	83 b1       	in	r24, 0x03	; 3
 236:	80 6f       	ori	r24, 0xF0	; 240
 238:	83 b9       	out	0x03, r24	; 3
 23a:	9a 01       	movw	r18, r20
 23c:	36 95       	lsr	r19
 23e:	27 95       	ror	r18
 240:	36 95       	lsr	r19
 242:	27 95       	ror	r18
 244:	36 95       	lsr	r19
 246:	27 95       	ror	r18
 248:	a5 ec       	ldi	r26, 0xC5	; 197
 24a:	b0 e2       	ldi	r27, 0x20	; 32
 24c:	27 d1       	rcall	.+590    	; 0x49c <__umulhisi3>
 24e:	ac 01       	movw	r20, r24
 250:	52 95       	swap	r21
 252:	42 95       	swap	r20
 254:	4f 70       	andi	r20, 0x0F	; 15
 256:	45 27       	eor	r20, r21
 258:	5f 70       	andi	r21, 0x0F	; 15
 25a:	45 27       	eor	r20, r21
 25c:	9a 01       	movw	r18, r20
 25e:	ad ec       	ldi	r26, 0xCD	; 205
 260:	bc ec       	ldi	r27, 0xCC	; 204
 262:	1c d1       	rcall	.+568    	; 0x49c <__umulhisi3>
 264:	96 95       	lsr	r25
 266:	87 95       	ror	r24
 268:	96 95       	lsr	r25
 26a:	87 95       	ror	r24
 26c:	96 95       	lsr	r25
 26e:	87 95       	ror	r24
 270:	9c 01       	movw	r18, r24
 272:	22 0f       	add	r18, r18
 274:	33 1f       	adc	r19, r19
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	82 0f       	add	r24, r18
 284:	93 1f       	adc	r25, r19
 286:	9a 01       	movw	r18, r20
 288:	28 1b       	sub	r18, r24
 28a:	39 0b       	sbc	r19, r25
 28c:	e1 e0       	ldi	r30, 0x01	; 1
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	ec 0f       	add	r30, r28
 292:	fd 1f       	adc	r31, r29
 294:	e2 0f       	add	r30, r18
 296:	f3 1f       	adc	r31, r19
 298:	80 81       	ld	r24, Z
 29a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 29e:	8f ee       	ldi	r24, 0xEF	; 239
 2a0:	83 b9       	out	0x03, r24	; 3
 2a2:	8f e9       	ldi	r24, 0x9F	; 159
 2a4:	9f e0       	ldi	r25, 0x0F	; 15
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <FND_dispNum+0xcc>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <FND_dispNum+0xd2>
 2ac:	00 00       	nop
 2ae:	9a c0       	rjmp	.+308    	; 0x3e4 <FND_dispNum+0x20a>
 2b0:	83 b1       	in	r24, 0x03	; 3
 2b2:	80 6f       	ori	r24, 0xF0	; 240
 2b4:	83 b9       	out	0x03, r24	; 3
 2b6:	9a 01       	movw	r18, r20
 2b8:	36 95       	lsr	r19
 2ba:	27 95       	ror	r18
 2bc:	36 95       	lsr	r19
 2be:	27 95       	ror	r18
 2c0:	ab e7       	ldi	r26, 0x7B	; 123
 2c2:	b4 e1       	ldi	r27, 0x14	; 20
 2c4:	eb d0       	rcall	.+470    	; 0x49c <__umulhisi3>
 2c6:	ac 01       	movw	r20, r24
 2c8:	56 95       	lsr	r21
 2ca:	47 95       	ror	r20
 2cc:	9a 01       	movw	r18, r20
 2ce:	ad ec       	ldi	r26, 0xCD	; 205
 2d0:	bc ec       	ldi	r27, 0xCC	; 204
 2d2:	e4 d0       	rcall	.+456    	; 0x49c <__umulhisi3>
 2d4:	96 95       	lsr	r25
 2d6:	87 95       	ror	r24
 2d8:	96 95       	lsr	r25
 2da:	87 95       	ror	r24
 2dc:	96 95       	lsr	r25
 2de:	87 95       	ror	r24
 2e0:	9c 01       	movw	r18, r24
 2e2:	22 0f       	add	r18, r18
 2e4:	33 1f       	adc	r19, r19
 2e6:	88 0f       	add	r24, r24
 2e8:	99 1f       	adc	r25, r25
 2ea:	88 0f       	add	r24, r24
 2ec:	99 1f       	adc	r25, r25
 2ee:	88 0f       	add	r24, r24
 2f0:	99 1f       	adc	r25, r25
 2f2:	82 0f       	add	r24, r18
 2f4:	93 1f       	adc	r25, r19
 2f6:	9a 01       	movw	r18, r20
 2f8:	28 1b       	sub	r18, r24
 2fa:	39 0b       	sbc	r19, r25
 2fc:	e1 e0       	ldi	r30, 0x01	; 1
 2fe:	f0 e0       	ldi	r31, 0x00	; 0
 300:	ec 0f       	add	r30, r28
 302:	fd 1f       	adc	r31, r29
 304:	e2 0f       	add	r30, r18
 306:	f3 1f       	adc	r31, r19
 308:	80 81       	ld	r24, Z
 30a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 30e:	8f ed       	ldi	r24, 0xDF	; 223
 310:	83 b9       	out	0x03, r24	; 3
 312:	8f e9       	ldi	r24, 0x9F	; 159
 314:	9f e0       	ldi	r25, 0x0F	; 15
 316:	01 97       	sbiw	r24, 0x01	; 1
 318:	f1 f7       	brne	.-4      	; 0x316 <FND_dispNum+0x13c>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <FND_dispNum+0x142>
 31c:	00 00       	nop
 31e:	62 c0       	rjmp	.+196    	; 0x3e4 <FND_dispNum+0x20a>
 320:	83 b1       	in	r24, 0x03	; 3
 322:	80 6f       	ori	r24, 0xF0	; 240
 324:	83 b9       	out	0x03, r24	; 3
 326:	9a 01       	movw	r18, r20
 328:	ad ec       	ldi	r26, 0xCD	; 205
 32a:	bc ec       	ldi	r27, 0xCC	; 204
 32c:	b7 d0       	rcall	.+366    	; 0x49c <__umulhisi3>
 32e:	ac 01       	movw	r20, r24
 330:	56 95       	lsr	r21
 332:	47 95       	ror	r20
 334:	56 95       	lsr	r21
 336:	47 95       	ror	r20
 338:	56 95       	lsr	r21
 33a:	47 95       	ror	r20
 33c:	9a 01       	movw	r18, r20
 33e:	ae d0       	rcall	.+348    	; 0x49c <__umulhisi3>
 340:	96 95       	lsr	r25
 342:	87 95       	ror	r24
 344:	96 95       	lsr	r25
 346:	87 95       	ror	r24
 348:	96 95       	lsr	r25
 34a:	87 95       	ror	r24
 34c:	9c 01       	movw	r18, r24
 34e:	22 0f       	add	r18, r18
 350:	33 1f       	adc	r19, r19
 352:	88 0f       	add	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	82 0f       	add	r24, r18
 360:	93 1f       	adc	r25, r19
 362:	9a 01       	movw	r18, r20
 364:	28 1b       	sub	r18, r24
 366:	39 0b       	sbc	r19, r25
 368:	e1 e0       	ldi	r30, 0x01	; 1
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	ec 0f       	add	r30, r28
 36e:	fd 1f       	adc	r31, r29
 370:	e2 0f       	add	r30, r18
 372:	f3 1f       	adc	r31, r19
 374:	80 81       	ld	r24, Z
 376:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 37a:	8f eb       	ldi	r24, 0xBF	; 191
 37c:	83 b9       	out	0x03, r24	; 3
 37e:	8f e9       	ldi	r24, 0x9F	; 159
 380:	9f e0       	ldi	r25, 0x0F	; 15
 382:	01 97       	sbiw	r24, 0x01	; 1
 384:	f1 f7       	brne	.-4      	; 0x382 <FND_dispNum+0x1a8>
 386:	00 c0       	rjmp	.+0      	; 0x388 <FND_dispNum+0x1ae>
 388:	00 00       	nop
 38a:	2c c0       	rjmp	.+88     	; 0x3e4 <FND_dispNum+0x20a>
 38c:	83 b1       	in	r24, 0x03	; 3
 38e:	80 6f       	ori	r24, 0xF0	; 240
 390:	83 b9       	out	0x03, r24	; 3
 392:	9a 01       	movw	r18, r20
 394:	ad ec       	ldi	r26, 0xCD	; 205
 396:	bc ec       	ldi	r27, 0xCC	; 204
 398:	81 d0       	rcall	.+258    	; 0x49c <__umulhisi3>
 39a:	96 95       	lsr	r25
 39c:	87 95       	ror	r24
 39e:	96 95       	lsr	r25
 3a0:	87 95       	ror	r24
 3a2:	96 95       	lsr	r25
 3a4:	87 95       	ror	r24
 3a6:	9c 01       	movw	r18, r24
 3a8:	22 0f       	add	r18, r18
 3aa:	33 1f       	adc	r19, r19
 3ac:	88 0f       	add	r24, r24
 3ae:	99 1f       	adc	r25, r25
 3b0:	88 0f       	add	r24, r24
 3b2:	99 1f       	adc	r25, r25
 3b4:	88 0f       	add	r24, r24
 3b6:	99 1f       	adc	r25, r25
 3b8:	82 0f       	add	r24, r18
 3ba:	93 1f       	adc	r25, r19
 3bc:	9a 01       	movw	r18, r20
 3be:	28 1b       	sub	r18, r24
 3c0:	39 0b       	sbc	r19, r25
 3c2:	e1 e0       	ldi	r30, 0x01	; 1
 3c4:	f0 e0       	ldi	r31, 0x00	; 0
 3c6:	ec 0f       	add	r30, r28
 3c8:	fd 1f       	adc	r31, r29
 3ca:	e2 0f       	add	r30, r18
 3cc:	f3 1f       	adc	r31, r19
 3ce:	80 81       	ld	r24, Z
 3d0:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
 3d4:	8f e7       	ldi	r24, 0x7F	; 127
 3d6:	83 b9       	out	0x03, r24	; 3
 3d8:	8f e9       	ldi	r24, 0x9F	; 159
 3da:	9f e0       	ldi	r25, 0x0F	; 15
 3dc:	01 97       	sbiw	r24, 0x01	; 1
 3de:	f1 f7       	brne	.-4      	; 0x3dc <FND_dispNum+0x202>
 3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <FND_dispNum+0x208>
 3e2:	00 00       	nop
 3e4:	2a 96       	adiw	r28, 0x0a	; 10
 3e6:	0f b6       	in	r0, 0x3f	; 63
 3e8:	f8 94       	cli
 3ea:	de bf       	out	0x3e, r29	; 62
 3ec:	0f be       	out	0x3f, r0	; 63
 3ee:	cd bf       	out	0x3d, r28	; 61
 3f0:	df 91       	pop	r29
 3f2:	cf 91       	pop	r28
 3f4:	08 95       	ret

000003f6 <FND_setFndData>:
 3f6:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <fndData+0x1>
 3fa:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <fndData>
 3fe:	08 95       	ret

00000400 <FND_ISR_Process>:
 400:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <fndData>
 404:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <fndData+0x1>
 408:	e8 ce       	rjmp	.-560    	; 0x1da <FND_dispNum>
 40a:	08 95       	ret

0000040c <__vector_16>:
#include <util/delay.h>
#include <avr/interrupt.h>
#include "ap/StopWatch/STOPWATCH.h"


ISR(TIMER0_OVF_vect){
 40c:	1f 92       	push	r1
 40e:	0f 92       	push	r0
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	0f 92       	push	r0
 414:	11 24       	eor	r1, r1
 416:	0b b6       	in	r0, 0x3b	; 59
 418:	0f 92       	push	r0
 41a:	2f 93       	push	r18
 41c:	3f 93       	push	r19
 41e:	4f 93       	push	r20
 420:	5f 93       	push	r21
 422:	6f 93       	push	r22
 424:	7f 93       	push	r23
 426:	8f 93       	push	r24
 428:	9f 93       	push	r25
 42a:	af 93       	push	r26
 42c:	bf 93       	push	r27
 42e:	ef 93       	push	r30
 430:	ff 93       	push	r31
	FND_ISR_Process();
 432:	e6 df       	rcall	.-52     	; 0x400 <FND_ISR_Process>
	TCNT0 = 130;
 434:	82 e8       	ldi	r24, 0x82	; 130
 436:	82 bf       	out	0x32, r24	; 50
}
 438:	ff 91       	pop	r31
 43a:	ef 91       	pop	r30
 43c:	bf 91       	pop	r27
 43e:	af 91       	pop	r26
 440:	9f 91       	pop	r25
 442:	8f 91       	pop	r24
 444:	7f 91       	pop	r23
 446:	6f 91       	pop	r22
 448:	5f 91       	pop	r21
 44a:	4f 91       	pop	r20
 44c:	3f 91       	pop	r19
 44e:	2f 91       	pop	r18
 450:	0f 90       	pop	r0
 452:	0b be       	out	0x3b, r0	; 59
 454:	0f 90       	pop	r0
 456:	0f be       	out	0x3f, r0	; 63
 458:	0f 90       	pop	r0
 45a:	1f 90       	pop	r1
 45c:	18 95       	reti

0000045e <main>:

int main(void)
{
	StopWatch_init();
 45e:	34 de       	rcall	.-920    	; 0xc8 <StopWatch_init>
	sei();
	
    while (1) 
    {
		StopWatch_run();
 460:	78 94       	sei
 462:	4b de       	rcall	.-874    	; 0xfa <StopWatch_run>
 464:	fe cf       	rjmp	.-4      	; 0x462 <main+0x4>

00000466 <Gpio_initPin>:
 466:	61 11       	cpse	r22, r1
 468:	0c c0       	rjmp	.+24     	; 0x482 <Gpio_initPin+0x1c>
 46a:	fc 01       	movw	r30, r24
 46c:	50 81       	ld	r21, Z
 46e:	21 e0       	ldi	r18, 0x01	; 1
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	02 c0       	rjmp	.+4      	; 0x478 <Gpio_initPin+0x12>
 474:	22 0f       	add	r18, r18
 476:	33 1f       	adc	r19, r19
 478:	4a 95       	dec	r20
 47a:	e2 f7       	brpl	.-8      	; 0x474 <Gpio_initPin+0xe>
 47c:	25 2b       	or	r18, r21
 47e:	20 83       	st	Z, r18
 480:	08 95       	ret
 482:	fc 01       	movw	r30, r24
 484:	50 81       	ld	r21, Z
 486:	21 e0       	ldi	r18, 0x01	; 1
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	02 c0       	rjmp	.+4      	; 0x490 <Gpio_initPin+0x2a>
 48c:	22 0f       	add	r18, r18
 48e:	33 1f       	adc	r19, r19
 490:	4a 95       	dec	r20
 492:	e2 f7       	brpl	.-8      	; 0x48c <Gpio_initPin+0x26>
 494:	20 95       	com	r18
 496:	25 23       	and	r18, r21
 498:	20 83       	st	Z, r18
 49a:	08 95       	ret

0000049c <__umulhisi3>:
 49c:	a2 9f       	mul	r26, r18
 49e:	b0 01       	movw	r22, r0
 4a0:	b3 9f       	mul	r27, r19
 4a2:	c0 01       	movw	r24, r0
 4a4:	a3 9f       	mul	r26, r19
 4a6:	70 0d       	add	r23, r0
 4a8:	81 1d       	adc	r24, r1
 4aa:	11 24       	eor	r1, r1
 4ac:	91 1d       	adc	r25, r1
 4ae:	b2 9f       	mul	r27, r18
 4b0:	70 0d       	add	r23, r0
 4b2:	81 1d       	adc	r24, r1
 4b4:	11 24       	eor	r1, r1
 4b6:	91 1d       	adc	r25, r1
 4b8:	08 95       	ret

000004ba <_exit>:
 4ba:	f8 94       	cli

000004bc <__stop_program>:
 4bc:	ff cf       	rjmp	.-2      	; 0x4bc <__stop_program>
