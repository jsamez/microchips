
I2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000008cc  00000960  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800110  00800110  00000970  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000a0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011f4  00000000  00000000  00000b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000aa7  00000000  00000000  00001d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000083c  00000000  00000000  000027af  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000218  00000000  00000000  00002fec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f5  00000000  00000000  00003204  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000656  00000000  00000000  000037f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00003e4f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec ec       	ldi	r30, 0xCC	; 204
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e1       	ldi	r26, 0x10	; 16
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a1 31       	cpi	r26, 0x11	; 17
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	bf d0       	rcall	.+382    	; 0x242 <main>
  c4:	01 c4       	rjmp	.+2050   	; 0x8c8 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <LCD_SendToI2C>:
	LCD_SendToI2C(LCD_SLA_W,lcdControlData);
}

void LCD_BackLighteOFF(){
	lcdControlData &= ~(1<<LCD_BackLighte);
	LCD_SendToI2C(LCD_SLA_W,lcdControlData);
  c8:	17 c1       	rjmp	.+558    	; 0x2f8 <I2C_txByte>
  ca:	08 95       	ret

000000cc <LCD_BackLighteON>:
  cc:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
  d0:	68 60       	ori	r22, 0x08	; 8
  d2:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
  d6:	8e e4       	ldi	r24, 0x4E	; 78
  d8:	f7 cf       	rjmp	.-18     	; 0xc8 <LCD_SendToI2C>
  da:	08 95       	ret

000000dc <LCD_cmdMode>:
}

void LCD_cmdMode()
{
	// RS pin : bit 0 set
	lcdControlData &= ~(1<<LCD_RS);
  dc:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
  e0:	6e 7f       	andi	r22, 0xFE	; 254
  e2:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
	LCD_SendToI2C(LCD_SLA_W,lcdControlData);
  e6:	8e e4       	ldi	r24, 0x4E	; 78
  e8:	ef cf       	rjmp	.-34     	; 0xc8 <LCD_SendToI2C>
  ea:	08 95       	ret

000000ec <LCD_charMode>:
}

void LCD_charMode()
{
	// RS pin : bit 0 set
	lcdControlData |= (1<<LCD_RS);
  ec:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
  f0:	61 60       	ori	r22, 0x01	; 1
  f2:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
	LCD_SendToI2C(LCD_SLA_W,lcdControlData);;
  f6:	8e e4       	ldi	r24, 0x4E	; 78
  f8:	e7 cf       	rjmp	.-50     	; 0xc8 <LCD_SendToI2C>
  fa:	08 95       	ret

000000fc <LCD_writeMode>:
}

void LCD_writeMode()
{lcdControlData &= ~(1<<LCD_RW);
  fc:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
 100:	6d 7f       	andi	r22, 0xFD	; 253
 102:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
	LCD_SendToI2C(LCD_SLA_W,lcdControlData);
 106:	8e e4       	ldi	r24, 0x4E	; 78
 108:	df cf       	rjmp	.-66     	; 0xc8 <LCD_SendToI2C>
 10a:	08 95       	ret

0000010c <LCD_enableHigh>:
}

void LCD_enableHigh()
{
	// E pin : bit 1 set
	lcdControlData |= (1<<LCD_E);
 10c:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
 110:	64 60       	ori	r22, 0x04	; 4
 112:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
	LCD_SendToI2C(LCD_SLA_W,lcdControlData);;
 116:	8e e4       	ldi	r24, 0x4E	; 78
 118:	d7 df       	rcall	.-82     	; 0xc8 <LCD_SendToI2C>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	8f e9       	ldi	r24, 0x9F	; 159
 11c:	9f e0       	ldi	r25, 0x0F	; 15
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <LCD_enableHigh+0x12>
 122:	00 c0       	rjmp	.+0      	; 0x124 <LCD_enableHigh+0x18>
 124:	00 00       	nop
 126:	08 95       	ret

00000128 <LCD_enableLow>:
}

void LCD_enableLow()
{
	// E pin : bit 0 set
	lcdControlData &= ~(1<<LCD_E);
 128:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
 12c:	6b 7f       	andi	r22, 0xFB	; 251
 12e:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
	LCD_SendToI2C(LCD_SLA_W,lcdControlData);
 132:	8e e4       	ldi	r24, 0x4E	; 78
 134:	c9 df       	rcall	.-110    	; 0xc8 <LCD_SendToI2C>
 136:	8f e9       	ldi	r24, 0x9F	; 159
 138:	9f e0       	ldi	r25, 0x0F	; 15
 13a:	01 97       	sbiw	r24, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <LCD_enableLow+0x12>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <LCD_enableLow+0x18>
 140:	00 00       	nop
 142:	08 95       	ret

00000144 <LCD_writeNibble>:
	_delay_ms(1);
}

void LCD_writeNibble(uint8_t data)
{
 144:	cf 93       	push	r28
 146:	c8 2f       	mov	r28, r24
	LCD_enableHigh();
 148:	e1 df       	rcall	.-62     	; 0x10c <LCD_enableHigh>
	lcdControlData = (lcdControlData & 0x0f)| (data & 0xf0);
 14a:	60 91 10 01 	lds	r22, 0x0110	; 0x800110 <__data_end>
 14e:	6f 70       	andi	r22, 0x0F	; 15
 150:	c0 7f       	andi	r28, 0xF0	; 240
 152:	6c 2b       	or	r22, r28
 154:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <__data_end>
	LCD_SendToI2C(LCD_SLA_W, lcdControlData);
 158:	8e e4       	ldi	r24, 0x4E	; 78
	LCD_enableLow();
 15a:	b6 df       	rcall	.-148    	; 0xc8 <LCD_SendToI2C>
 15c:	e5 df       	rcall	.-54     	; 0x128 <LCD_enableLow>
}
 15e:	cf 91       	pop	r28
 160:	08 95       	ret

00000162 <LCD_writeByte>:

void LCD_writeByte(uint8_t data)
{
 162:	cf 93       	push	r28
 164:	c8 2f       	mov	r28, r24
	// 8 bit PORTC write
	LCD_writeNibble(data);
 166:	ee df       	rcall	.-36     	; 0x144 <LCD_writeNibble>
	data<<=4;
	LCD_writeNibble(data);
 168:	8c 2f       	mov	r24, r28
 16a:	82 95       	swap	r24
 16c:	80 7f       	andi	r24, 0xF0	; 240
 16e:	ea df       	rcall	.-44     	; 0x144 <LCD_writeNibble>
}
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <LCD_writeCmdData>:


// MCU -> LCD 명령어를 보낼 경우 (write mode)

void LCD_writeCmdData(uint8_t data)
{
 174:	cf 93       	push	r28
 176:	c8 2f       	mov	r28, r24
	// LCD 명령어 전달
	LCD_cmdMode();
 178:	b1 df       	rcall	.-158    	; 0xdc <LCD_cmdMode>
	LCD_writeMode();
 17a:	c0 df       	rcall	.-128    	; 0xfc <LCD_writeMode>
	LCD_enableHigh();
 17c:	c7 df       	rcall	.-114    	; 0x10c <LCD_enableHigh>
	LCD_writeByte(data);
 17e:	8c 2f       	mov	r24, r28
 180:	f0 df       	rcall	.-32     	; 0x162 <LCD_writeByte>
 182:	d2 df       	rcall	.-92     	; 0x128 <LCD_enableLow>
	LCD_enableLow();
 184:	cf 91       	pop	r28
 186:	08 95       	ret

00000188 <LCD_init>:
	
}
 188:	8e d0       	rcall	.+284    	; 0x2a6 <I2C_init>
 18a:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
 18e:	8f e5       	ldi	r24, 0x5F	; 95
 190:	9a ee       	ldi	r25, 0xEA	; 234
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <LCD_init+0xa>
 196:	00 c0       	rjmp	.+0      	; 0x198 <LCD_init+0x10>

	I2C_init();
	lcdControlData = 0;
	_delay_ms(15);
	
	LCD_cmdMode();
 198:	00 00       	nop
	LCD_writeMode();
 19a:	a0 df       	rcall	.-192    	; 0xdc <LCD_cmdMode>
	LCD_writeNibble(0x30);
 19c:	af df       	rcall	.-162    	; 0xfc <LCD_writeMode>
 19e:	80 e3       	ldi	r24, 0x30	; 48
 1a0:	d1 df       	rcall	.-94     	; 0x144 <LCD_writeNibble>
 1a2:	8f e1       	ldi	r24, 0x1F	; 31
 1a4:	9e e4       	ldi	r25, 0x4E	; 78
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <LCD_init+0x1e>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <LCD_init+0x24>
	_delay_ms(5);
	LCD_writeNibble(0x30);
 1ac:	00 00       	nop
 1ae:	80 e3       	ldi	r24, 0x30	; 48
 1b0:	c9 df       	rcall	.-110    	; 0x144 <LCD_writeNibble>
 1b2:	8f e9       	ldi	r24, 0x9F	; 159
 1b4:	9f e0       	ldi	r25, 0x0F	; 15
 1b6:	01 97       	sbiw	r24, 0x01	; 1
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <LCD_init+0x2e>
	_delay_ms(1);
	LCD_writeNibble(0x30);
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <LCD_init+0x34>
 1bc:	00 00       	nop
	LCD_writeNibble(0x20);
 1be:	80 e3       	ldi	r24, 0x30	; 48
 1c0:	c1 df       	rcall	.-126    	; 0x144 <LCD_writeNibble>
	LCD_writeCmdData(LCD_4bit_FUNCTION_SET);   // LCD_4bit_FUNCTION_SET      0x28
 1c2:	80 e2       	ldi	r24, 0x20	; 32
 1c4:	bf df       	rcall	.-130    	; 0x144 <LCD_writeNibble>
	LCD_writeCmdData(LCD_DISPLAY_OFF);         // LCD_DISPLAY_OFF            0x08
 1c6:	88 e2       	ldi	r24, 0x28	; 40
 1c8:	d5 df       	rcall	.-86     	; 0x174 <LCD_writeCmdData>
	LCD_writeCmdData(LCD_DISPLAY_CLEAR);      // LCD_DISPLAY_CLEAR         0x01
 1ca:	88 e0       	ldi	r24, 0x08	; 8
 1cc:	d3 df       	rcall	.-90     	; 0x174 <LCD_writeCmdData>
 1ce:	81 e0       	ldi	r24, 0x01	; 1
	LCD_writeCmdData(LCD_ENTRY_MODE_SET);      // LCD_ENTRY_MODE_SET         0x06
 1d0:	d1 df       	rcall	.-94     	; 0x174 <LCD_writeCmdData>
 1d2:	86 e0       	ldi	r24, 0x06	; 6
 1d4:	cf df       	rcall	.-98     	; 0x174 <LCD_writeCmdData>
	LCD_writeCmdData(LCD_DISPLAY_ON);         // LCD_DISPLAY_ON            0x0C
 1d6:	8c e0       	ldi	r24, 0x0C	; 12
 1d8:	cd df       	rcall	.-102    	; 0x174 <LCD_writeCmdData>
 1da:	78 cf       	rjmp	.-272    	; 0xcc <LCD_BackLighteON>
	LCD_BackLighteON();
 1dc:	08 95       	ret

000001de <LCD_writeCharData>:
 1de:	cf 93       	push	r28
 1e0:	c8 2f       	mov	r28, r24

// MCU -> LCD Data를 보낼 경우 (write mode)
void LCD_writeCharData(uint8_t data)
{
	// LCD Character 쓰기 전달
	LCD_charMode();
 1e2:	84 df       	rcall	.-248    	; 0xec <LCD_charMode>
	LCD_writeMode();
 1e4:	8b df       	rcall	.-234    	; 0xfc <LCD_writeMode>
	LCD_enableHigh();
 1e6:	92 df       	rcall	.-220    	; 0x10c <LCD_enableHigh>
	LCD_writeByte(data);
 1e8:	8c 2f       	mov	r24, r28
 1ea:	bb df       	rcall	.-138    	; 0x162 <LCD_writeByte>
 1ec:	9d df       	rcall	.-198    	; 0x128 <LCD_enableLow>
	LCD_enableLow();
 1ee:	cf 91       	pop	r28
 1f0:	08 95       	ret

000001f2 <LCD_writeString>:
}
 1f2:	0f 93       	push	r16
 1f4:	1f 93       	push	r17

void LCD_writeString(char *str)
{
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	8c 01       	movw	r16, r24
	for(int i=0; str[i] ; i++)
 1fc:	c0 e0       	ldi	r28, 0x00	; 0
 1fe:	d0 e0       	ldi	r29, 0x00	; 0
 200:	02 c0       	rjmp	.+4      	; 0x206 <LCD_writeString+0x14>
	{
		LCD_writeCharData(str[i]);
 202:	ed df       	rcall	.-38     	; 0x1de <LCD_writeCharData>
	LCD_enableLow();
}

void LCD_writeString(char *str)
{
	for(int i=0; str[i] ; i++)
 204:	21 96       	adiw	r28, 0x01	; 1
 206:	f8 01       	movw	r30, r16
 208:	ec 0f       	add	r30, r28
 20a:	fd 1f       	adc	r31, r29
 20c:	80 81       	ld	r24, Z
 20e:	81 11       	cpse	r24, r1
 210:	f8 cf       	rjmp	.-16     	; 0x202 <LCD_writeString+0x10>
	{
		LCD_writeCharData(str[i]);
	}
}
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	08 95       	ret

0000021c <LCD_gotoXY>:

void LCD_gotoXY(uint8_t row, uint8_t col)
{
	col%= 16; row %=2;
 21c:	6f 70       	andi	r22, 0x0F	; 15
 21e:	81 70       	andi	r24, 0x01	; 1
	uint8_t lcdregisterAddress = (0x40 * row ) + col;
 220:	90 e4       	ldi	r25, 0x40	; 64
 222:	89 9f       	mul	r24, r25
 224:	60 0d       	add	r22, r0
 226:	11 24       	eor	r1, r1
 228:	86 2f       	mov	r24, r22
	uint8_t command = 0x80 + lcdregisterAddress;
	LCD_writeCmdData(command);
 22a:	80 58       	subi	r24, 0x80	; 128
 22c:	a3 cf       	rjmp	.-186    	; 0x174 <LCD_writeCmdData>
 22e:	08 95       	ret

00000230 <LCD_writeStringXY>:
}

void LCD_writeStringXY(uint8_t row, uint8_t col, char *str)
{
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	ea 01       	movw	r28, r20
	LCD_gotoXY(row,col);
 236:	f2 df       	rcall	.-28     	; 0x21c <LCD_gotoXY>
	LCD_writeString(str);
 238:	ce 01       	movw	r24, r28
 23a:	db df       	rcall	.-74     	; 0x1f2 <LCD_writeString>
}
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	08 95       	ret

00000242 <main>:
 242:	cf 93       	push	r28
 244:	df 93       	push	r29
 246:	cd b7       	in	r28, 0x3d	; 61
 248:	de b7       	in	r29, 0x3e	; 62
 24a:	6e 97       	sbiw	r28, 0x1e	; 30
 24c:	0f b6       	in	r0, 0x3f	; 63
 24e:	f8 94       	cli
 250:	de bf       	out	0x3e, r29	; 62
 252:	0f be       	out	0x3f, r0	; 63
 254:	cd bf       	out	0x3d, r28	; 61
 256:	98 df       	rcall	.-208    	; 0x188 <LCD_init>
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	7c 01       	movw	r14, r24
 25e:	2f ef       	ldi	r18, 0xFF	; 255
 260:	e2 1a       	sub	r14, r18
 262:	f2 0a       	sbc	r15, r18
 264:	9f 93       	push	r25
 266:	8f 93       	push	r24
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	9f 93       	push	r25
 26e:	8f 93       	push	r24
 270:	8e 01       	movw	r16, r28
 272:	0f 5f       	subi	r16, 0xFF	; 255
 274:	1f 4f       	sbci	r17, 0xFF	; 255
 276:	1f 93       	push	r17
 278:	0f 93       	push	r16
 27a:	4b d0       	rcall	.+150    	; 0x312 <sprintf>
 27c:	a8 01       	movw	r20, r16
 27e:	63 e0       	ldi	r22, 0x03	; 3
 280:	80 e0       	ldi	r24, 0x00	; 0
 282:	d6 df       	rcall	.-84     	; 0x230 <LCD_writeStringXY>
 284:	8f ef       	ldi	r24, 0xFF	; 255
 286:	91 ee       	ldi	r25, 0xE1	; 225
 288:	24 e0       	ldi	r18, 0x04	; 4
 28a:	81 50       	subi	r24, 0x01	; 1
 28c:	90 40       	sbci	r25, 0x00	; 0
 28e:	20 40       	sbci	r18, 0x00	; 0
 290:	e1 f7       	brne	.-8      	; 0x28a <main+0x48>
 292:	00 c0       	rjmp	.+0      	; 0x294 <main+0x52>
 294:	00 00       	nop
 296:	0f 90       	pop	r0
 298:	0f 90       	pop	r0
 29a:	0f 90       	pop	r0
 29c:	0f 90       	pop	r0
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	c7 01       	movw	r24, r14
 2a4:	db cf       	rjmp	.-74     	; 0x25c <main+0x1a>

000002a6 <I2C_init>:
 2a6:	81 b3       	in	r24, 0x11	; 17
 2a8:	83 60       	ori	r24, 0x03	; 3
 2aa:	81 bb       	out	0x11, r24	; 17
 2ac:	88 e4       	ldi	r24, 0x48	; 72
 2ae:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 2b2:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 2b6:	08 95       	ret

000002b8 <I2C_Start>:
 2b8:	84 ea       	ldi	r24, 0xA4	; 164
 2ba:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 2be:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 2c2:	88 23       	and	r24, r24
 2c4:	e4 f7       	brge	.-8      	; 0x2be <I2C_Start+0x6>
 2c6:	08 95       	ret

000002c8 <I2C_txDevAddr>:
 2c8:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 2cc:	84 e8       	ldi	r24, 0x84	; 132
 2ce:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 2d2:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 2d6:	88 23       	and	r24, r24
 2d8:	e4 f7       	brge	.-8      	; 0x2d2 <I2C_txDevAddr+0xa>
 2da:	08 95       	ret

000002dc <I2C_txData>:
 2dc:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 2e0:	84 e8       	ldi	r24, 0x84	; 132
 2e2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 2e6:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 2ea:	88 23       	and	r24, r24
 2ec:	e4 f7       	brge	.-8      	; 0x2e6 <I2C_txData+0xa>
 2ee:	08 95       	ret

000002f0 <I2C_Stop>:
 2f0:	84 e9       	ldi	r24, 0x94	; 148
 2f2:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 2f6:	08 95       	ret

000002f8 <I2C_txByte>:
 2f8:	cf 93       	push	r28
 2fa:	df 93       	push	r29
 2fc:	d8 2f       	mov	r29, r24
 2fe:	c6 2f       	mov	r28, r22
 300:	db df       	rcall	.-74     	; 0x2b8 <I2C_Start>
 302:	8d 2f       	mov	r24, r29
 304:	e1 df       	rcall	.-62     	; 0x2c8 <I2C_txDevAddr>
 306:	8c 2f       	mov	r24, r28
 308:	e9 df       	rcall	.-46     	; 0x2dc <I2C_txData>
 30a:	f2 df       	rcall	.-28     	; 0x2f0 <I2C_Stop>
 30c:	df 91       	pop	r29
 30e:	cf 91       	pop	r28
 310:	08 95       	ret

00000312 <sprintf>:
 312:	0f 93       	push	r16
 314:	1f 93       	push	r17
 316:	cf 93       	push	r28
 318:	df 93       	push	r29
 31a:	cd b7       	in	r28, 0x3d	; 61
 31c:	de b7       	in	r29, 0x3e	; 62
 31e:	2e 97       	sbiw	r28, 0x0e	; 14
 320:	0f b6       	in	r0, 0x3f	; 63
 322:	f8 94       	cli
 324:	de bf       	out	0x3e, r29	; 62
 326:	0f be       	out	0x3f, r0	; 63
 328:	cd bf       	out	0x3d, r28	; 61
 32a:	0d 89       	ldd	r16, Y+21	; 0x15
 32c:	1e 89       	ldd	r17, Y+22	; 0x16
 32e:	86 e0       	ldi	r24, 0x06	; 6
 330:	8c 83       	std	Y+4, r24	; 0x04
 332:	1a 83       	std	Y+2, r17	; 0x02
 334:	09 83       	std	Y+1, r16	; 0x01
 336:	8f ef       	ldi	r24, 0xFF	; 255
 338:	9f e7       	ldi	r25, 0x7F	; 127
 33a:	9e 83       	std	Y+6, r25	; 0x06
 33c:	8d 83       	std	Y+5, r24	; 0x05
 33e:	ae 01       	movw	r20, r28
 340:	47 5e       	subi	r20, 0xE7	; 231
 342:	5f 4f       	sbci	r21, 0xFF	; 255
 344:	6f 89       	ldd	r22, Y+23	; 0x17
 346:	78 8d       	ldd	r23, Y+24	; 0x18
 348:	ce 01       	movw	r24, r28
 34a:	01 96       	adiw	r24, 0x01	; 1
 34c:	10 d0       	rcall	.+32     	; 0x36e <vfprintf>
 34e:	ef 81       	ldd	r30, Y+7	; 0x07
 350:	f8 85       	ldd	r31, Y+8	; 0x08
 352:	e0 0f       	add	r30, r16
 354:	f1 1f       	adc	r31, r17
 356:	10 82       	st	Z, r1
 358:	2e 96       	adiw	r28, 0x0e	; 14
 35a:	0f b6       	in	r0, 0x3f	; 63
 35c:	f8 94       	cli
 35e:	de bf       	out	0x3e, r29	; 62
 360:	0f be       	out	0x3f, r0	; 63
 362:	cd bf       	out	0x3d, r28	; 61
 364:	df 91       	pop	r29
 366:	cf 91       	pop	r28
 368:	1f 91       	pop	r17
 36a:	0f 91       	pop	r16
 36c:	08 95       	ret

0000036e <vfprintf>:
 36e:	2f 92       	push	r2
 370:	3f 92       	push	r3
 372:	4f 92       	push	r4
 374:	5f 92       	push	r5
 376:	6f 92       	push	r6
 378:	7f 92       	push	r7
 37a:	8f 92       	push	r8
 37c:	9f 92       	push	r9
 37e:	af 92       	push	r10
 380:	bf 92       	push	r11
 382:	cf 92       	push	r12
 384:	df 92       	push	r13
 386:	ef 92       	push	r14
 388:	ff 92       	push	r15
 38a:	0f 93       	push	r16
 38c:	1f 93       	push	r17
 38e:	cf 93       	push	r28
 390:	df 93       	push	r29
 392:	cd b7       	in	r28, 0x3d	; 61
 394:	de b7       	in	r29, 0x3e	; 62
 396:	2b 97       	sbiw	r28, 0x0b	; 11
 398:	0f b6       	in	r0, 0x3f	; 63
 39a:	f8 94       	cli
 39c:	de bf       	out	0x3e, r29	; 62
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	cd bf       	out	0x3d, r28	; 61
 3a2:	6c 01       	movw	r12, r24
 3a4:	7b 01       	movw	r14, r22
 3a6:	8a 01       	movw	r16, r20
 3a8:	fc 01       	movw	r30, r24
 3aa:	17 82       	std	Z+7, r1	; 0x07
 3ac:	16 82       	std	Z+6, r1	; 0x06
 3ae:	83 81       	ldd	r24, Z+3	; 0x03
 3b0:	81 ff       	sbrs	r24, 1
 3b2:	bf c1       	rjmp	.+894    	; 0x732 <__LOCK_REGION_LENGTH__+0x332>
 3b4:	ce 01       	movw	r24, r28
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	3c 01       	movw	r6, r24
 3ba:	f6 01       	movw	r30, r12
 3bc:	93 81       	ldd	r25, Z+3	; 0x03
 3be:	f7 01       	movw	r30, r14
 3c0:	93 fd       	sbrc	r25, 3
 3c2:	85 91       	lpm	r24, Z+
 3c4:	93 ff       	sbrs	r25, 3
 3c6:	81 91       	ld	r24, Z+
 3c8:	7f 01       	movw	r14, r30
 3ca:	88 23       	and	r24, r24
 3cc:	09 f4       	brne	.+2      	; 0x3d0 <vfprintf+0x62>
 3ce:	ad c1       	rjmp	.+858    	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 3d0:	85 32       	cpi	r24, 0x25	; 37
 3d2:	39 f4       	brne	.+14     	; 0x3e2 <vfprintf+0x74>
 3d4:	93 fd       	sbrc	r25, 3
 3d6:	85 91       	lpm	r24, Z+
 3d8:	93 ff       	sbrs	r25, 3
 3da:	81 91       	ld	r24, Z+
 3dc:	7f 01       	movw	r14, r30
 3de:	85 32       	cpi	r24, 0x25	; 37
 3e0:	21 f4       	brne	.+8      	; 0x3ea <vfprintf+0x7c>
 3e2:	b6 01       	movw	r22, r12
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	d6 d1       	rcall	.+940    	; 0x794 <fputc>
 3e8:	e8 cf       	rjmp	.-48     	; 0x3ba <vfprintf+0x4c>
 3ea:	91 2c       	mov	r9, r1
 3ec:	21 2c       	mov	r2, r1
 3ee:	31 2c       	mov	r3, r1
 3f0:	ff e1       	ldi	r31, 0x1F	; 31
 3f2:	f3 15       	cp	r31, r3
 3f4:	d8 f0       	brcs	.+54     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3f6:	8b 32       	cpi	r24, 0x2B	; 43
 3f8:	79 f0       	breq	.+30     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3fa:	38 f4       	brcc	.+14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fc:	80 32       	cpi	r24, 0x20	; 32
 3fe:	79 f0       	breq	.+30     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 400:	83 32       	cpi	r24, 0x23	; 35
 402:	a1 f4       	brne	.+40     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 404:	23 2d       	mov	r18, r3
 406:	20 61       	ori	r18, 0x10	; 16
 408:	1d c0       	rjmp	.+58     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 40a:	8d 32       	cpi	r24, 0x2D	; 45
 40c:	61 f0       	breq	.+24     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 40e:	80 33       	cpi	r24, 0x30	; 48
 410:	69 f4       	brne	.+26     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 412:	23 2d       	mov	r18, r3
 414:	21 60       	ori	r18, 0x01	; 1
 416:	16 c0       	rjmp	.+44     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 418:	83 2d       	mov	r24, r3
 41a:	82 60       	ori	r24, 0x02	; 2
 41c:	38 2e       	mov	r3, r24
 41e:	e3 2d       	mov	r30, r3
 420:	e4 60       	ori	r30, 0x04	; 4
 422:	3e 2e       	mov	r3, r30
 424:	2a c0       	rjmp	.+84     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 426:	f3 2d       	mov	r31, r3
 428:	f8 60       	ori	r31, 0x08	; 8
 42a:	1d c0       	rjmp	.+58     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 42c:	37 fc       	sbrc	r3, 7
 42e:	2d c0       	rjmp	.+90     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 430:	20 ed       	ldi	r18, 0xD0	; 208
 432:	28 0f       	add	r18, r24
 434:	2a 30       	cpi	r18, 0x0A	; 10
 436:	40 f0       	brcs	.+16     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 438:	8e 32       	cpi	r24, 0x2E	; 46
 43a:	b9 f4       	brne	.+46     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 43c:	36 fc       	sbrc	r3, 6
 43e:	75 c1       	rjmp	.+746    	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 440:	23 2d       	mov	r18, r3
 442:	20 64       	ori	r18, 0x40	; 64
 444:	32 2e       	mov	r3, r18
 446:	19 c0       	rjmp	.+50     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 448:	36 fe       	sbrs	r3, 6
 44a:	06 c0       	rjmp	.+12     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 44c:	8a e0       	ldi	r24, 0x0A	; 10
 44e:	98 9e       	mul	r9, r24
 450:	20 0d       	add	r18, r0
 452:	11 24       	eor	r1, r1
 454:	92 2e       	mov	r9, r18
 456:	11 c0       	rjmp	.+34     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 458:	ea e0       	ldi	r30, 0x0A	; 10
 45a:	2e 9e       	mul	r2, r30
 45c:	20 0d       	add	r18, r0
 45e:	11 24       	eor	r1, r1
 460:	22 2e       	mov	r2, r18
 462:	f3 2d       	mov	r31, r3
 464:	f0 62       	ori	r31, 0x20	; 32
 466:	3f 2e       	mov	r3, r31
 468:	08 c0       	rjmp	.+16     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 46a:	8c 36       	cpi	r24, 0x6C	; 108
 46c:	21 f4       	brne	.+8      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46e:	83 2d       	mov	r24, r3
 470:	80 68       	ori	r24, 0x80	; 128
 472:	38 2e       	mov	r3, r24
 474:	02 c0       	rjmp	.+4      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 476:	88 36       	cpi	r24, 0x68	; 104
 478:	41 f4       	brne	.+16     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 47a:	f7 01       	movw	r30, r14
 47c:	93 fd       	sbrc	r25, 3
 47e:	85 91       	lpm	r24, Z+
 480:	93 ff       	sbrs	r25, 3
 482:	81 91       	ld	r24, Z+
 484:	7f 01       	movw	r14, r30
 486:	81 11       	cpse	r24, r1
 488:	b3 cf       	rjmp	.-154    	; 0x3f0 <vfprintf+0x82>
 48a:	98 2f       	mov	r25, r24
 48c:	9f 7d       	andi	r25, 0xDF	; 223
 48e:	95 54       	subi	r25, 0x45	; 69
 490:	93 30       	cpi	r25, 0x03	; 3
 492:	28 f4       	brcc	.+10     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 494:	0c 5f       	subi	r16, 0xFC	; 252
 496:	1f 4f       	sbci	r17, 0xFF	; 255
 498:	9f e3       	ldi	r25, 0x3F	; 63
 49a:	99 83       	std	Y+1, r25	; 0x01
 49c:	0d c0       	rjmp	.+26     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 49e:	83 36       	cpi	r24, 0x63	; 99
 4a0:	31 f0       	breq	.+12     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a2:	83 37       	cpi	r24, 0x73	; 115
 4a4:	71 f0       	breq	.+28     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4a6:	83 35       	cpi	r24, 0x53	; 83
 4a8:	09 f0       	breq	.+2      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4aa:	55 c0       	rjmp	.+170    	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 4ac:	20 c0       	rjmp	.+64     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ae:	f8 01       	movw	r30, r16
 4b0:	80 81       	ld	r24, Z
 4b2:	89 83       	std	Y+1, r24	; 0x01
 4b4:	0e 5f       	subi	r16, 0xFE	; 254
 4b6:	1f 4f       	sbci	r17, 0xFF	; 255
 4b8:	88 24       	eor	r8, r8
 4ba:	83 94       	inc	r8
 4bc:	91 2c       	mov	r9, r1
 4be:	53 01       	movw	r10, r6
 4c0:	12 c0       	rjmp	.+36     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4c2:	28 01       	movw	r4, r16
 4c4:	f2 e0       	ldi	r31, 0x02	; 2
 4c6:	4f 0e       	add	r4, r31
 4c8:	51 1c       	adc	r5, r1
 4ca:	f8 01       	movw	r30, r16
 4cc:	a0 80       	ld	r10, Z
 4ce:	b1 80       	ldd	r11, Z+1	; 0x01
 4d0:	36 fe       	sbrs	r3, 6
 4d2:	03 c0       	rjmp	.+6      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d4:	69 2d       	mov	r22, r9
 4d6:	70 e0       	ldi	r23, 0x00	; 0
 4d8:	02 c0       	rjmp	.+4      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4da:	6f ef       	ldi	r22, 0xFF	; 255
 4dc:	7f ef       	ldi	r23, 0xFF	; 255
 4de:	c5 01       	movw	r24, r10
 4e0:	4e d1       	rcall	.+668    	; 0x77e <strnlen>
 4e2:	4c 01       	movw	r8, r24
 4e4:	82 01       	movw	r16, r4
 4e6:	f3 2d       	mov	r31, r3
 4e8:	ff 77       	andi	r31, 0x7F	; 127
 4ea:	3f 2e       	mov	r3, r31
 4ec:	15 c0       	rjmp	.+42     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4ee:	28 01       	movw	r4, r16
 4f0:	22 e0       	ldi	r18, 0x02	; 2
 4f2:	42 0e       	add	r4, r18
 4f4:	51 1c       	adc	r5, r1
 4f6:	f8 01       	movw	r30, r16
 4f8:	a0 80       	ld	r10, Z
 4fa:	b1 80       	ldd	r11, Z+1	; 0x01
 4fc:	36 fe       	sbrs	r3, 6
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 500:	69 2d       	mov	r22, r9
 502:	70 e0       	ldi	r23, 0x00	; 0
 504:	02 c0       	rjmp	.+4      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 506:	6f ef       	ldi	r22, 0xFF	; 255
 508:	7f ef       	ldi	r23, 0xFF	; 255
 50a:	c5 01       	movw	r24, r10
 50c:	2d d1       	rcall	.+602    	; 0x768 <strnlen_P>
 50e:	4c 01       	movw	r8, r24
 510:	f3 2d       	mov	r31, r3
 512:	f0 68       	ori	r31, 0x80	; 128
 514:	3f 2e       	mov	r3, r31
 516:	82 01       	movw	r16, r4
 518:	33 fc       	sbrc	r3, 3
 51a:	19 c0       	rjmp	.+50     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 51c:	82 2d       	mov	r24, r2
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	88 16       	cp	r8, r24
 522:	99 06       	cpc	r9, r25
 524:	a0 f4       	brcc	.+40     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 526:	b6 01       	movw	r22, r12
 528:	80 e2       	ldi	r24, 0x20	; 32
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	33 d1       	rcall	.+614    	; 0x794 <fputc>
 52e:	2a 94       	dec	r2
 530:	f5 cf       	rjmp	.-22     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 532:	f5 01       	movw	r30, r10
 534:	37 fc       	sbrc	r3, 7
 536:	85 91       	lpm	r24, Z+
 538:	37 fe       	sbrs	r3, 7
 53a:	81 91       	ld	r24, Z+
 53c:	5f 01       	movw	r10, r30
 53e:	b6 01       	movw	r22, r12
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	28 d1       	rcall	.+592    	; 0x794 <fputc>
 544:	21 10       	cpse	r2, r1
 546:	2a 94       	dec	r2
 548:	21 e0       	ldi	r18, 0x01	; 1
 54a:	82 1a       	sub	r8, r18
 54c:	91 08       	sbc	r9, r1
 54e:	81 14       	cp	r8, r1
 550:	91 04       	cpc	r9, r1
 552:	79 f7       	brne	.-34     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 554:	e1 c0       	rjmp	.+450    	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
 556:	84 36       	cpi	r24, 0x64	; 100
 558:	11 f0       	breq	.+4      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 55a:	89 36       	cpi	r24, 0x69	; 105
 55c:	39 f5       	brne	.+78     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 55e:	f8 01       	movw	r30, r16
 560:	37 fe       	sbrs	r3, 7
 562:	07 c0       	rjmp	.+14     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 564:	60 81       	ld	r22, Z
 566:	71 81       	ldd	r23, Z+1	; 0x01
 568:	82 81       	ldd	r24, Z+2	; 0x02
 56a:	93 81       	ldd	r25, Z+3	; 0x03
 56c:	0c 5f       	subi	r16, 0xFC	; 252
 56e:	1f 4f       	sbci	r17, 0xFF	; 255
 570:	08 c0       	rjmp	.+16     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 572:	60 81       	ld	r22, Z
 574:	71 81       	ldd	r23, Z+1	; 0x01
 576:	07 2e       	mov	r0, r23
 578:	00 0c       	add	r0, r0
 57a:	88 0b       	sbc	r24, r24
 57c:	99 0b       	sbc	r25, r25
 57e:	0e 5f       	subi	r16, 0xFE	; 254
 580:	1f 4f       	sbci	r17, 0xFF	; 255
 582:	f3 2d       	mov	r31, r3
 584:	ff 76       	andi	r31, 0x6F	; 111
 586:	3f 2e       	mov	r3, r31
 588:	97 ff       	sbrs	r25, 7
 58a:	09 c0       	rjmp	.+18     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 58c:	90 95       	com	r25
 58e:	80 95       	com	r24
 590:	70 95       	com	r23
 592:	61 95       	neg	r22
 594:	7f 4f       	sbci	r23, 0xFF	; 255
 596:	8f 4f       	sbci	r24, 0xFF	; 255
 598:	9f 4f       	sbci	r25, 0xFF	; 255
 59a:	f0 68       	ori	r31, 0x80	; 128
 59c:	3f 2e       	mov	r3, r31
 59e:	2a e0       	ldi	r18, 0x0A	; 10
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	a3 01       	movw	r20, r6
 5a4:	33 d1       	rcall	.+614    	; 0x80c <__ultoa_invert>
 5a6:	88 2e       	mov	r8, r24
 5a8:	86 18       	sub	r8, r6
 5aa:	44 c0       	rjmp	.+136    	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 5ac:	85 37       	cpi	r24, 0x75	; 117
 5ae:	31 f4       	brne	.+12     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b0:	23 2d       	mov	r18, r3
 5b2:	2f 7e       	andi	r18, 0xEF	; 239
 5b4:	b2 2e       	mov	r11, r18
 5b6:	2a e0       	ldi	r18, 0x0A	; 10
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	25 c0       	rjmp	.+74     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5bc:	93 2d       	mov	r25, r3
 5be:	99 7f       	andi	r25, 0xF9	; 249
 5c0:	b9 2e       	mov	r11, r25
 5c2:	8f 36       	cpi	r24, 0x6F	; 111
 5c4:	c1 f0       	breq	.+48     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5c6:	18 f4       	brcc	.+6      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5c8:	88 35       	cpi	r24, 0x58	; 88
 5ca:	79 f0       	breq	.+30     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5cc:	ae c0       	rjmp	.+348    	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 5ce:	80 37       	cpi	r24, 0x70	; 112
 5d0:	19 f0       	breq	.+6      	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5d2:	88 37       	cpi	r24, 0x78	; 120
 5d4:	21 f0       	breq	.+8      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5d6:	a9 c0       	rjmp	.+338    	; 0x72a <__LOCK_REGION_LENGTH__+0x32a>
 5d8:	e9 2f       	mov	r30, r25
 5da:	e0 61       	ori	r30, 0x10	; 16
 5dc:	be 2e       	mov	r11, r30
 5de:	b4 fe       	sbrs	r11, 4
 5e0:	0d c0       	rjmp	.+26     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5e2:	fb 2d       	mov	r31, r11
 5e4:	f4 60       	ori	r31, 0x04	; 4
 5e6:	bf 2e       	mov	r11, r31
 5e8:	09 c0       	rjmp	.+18     	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5ea:	34 fe       	sbrs	r3, 4
 5ec:	0a c0       	rjmp	.+20     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5ee:	29 2f       	mov	r18, r25
 5f0:	26 60       	ori	r18, 0x06	; 6
 5f2:	b2 2e       	mov	r11, r18
 5f4:	06 c0       	rjmp	.+12     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5f6:	28 e0       	ldi	r18, 0x08	; 8
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	05 c0       	rjmp	.+10     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5fc:	20 e1       	ldi	r18, 0x10	; 16
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	02 c0       	rjmp	.+4      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 602:	20 e1       	ldi	r18, 0x10	; 16
 604:	32 e0       	ldi	r19, 0x02	; 2
 606:	f8 01       	movw	r30, r16
 608:	b7 fe       	sbrs	r11, 7
 60a:	07 c0       	rjmp	.+14     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 60c:	60 81       	ld	r22, Z
 60e:	71 81       	ldd	r23, Z+1	; 0x01
 610:	82 81       	ldd	r24, Z+2	; 0x02
 612:	93 81       	ldd	r25, Z+3	; 0x03
 614:	0c 5f       	subi	r16, 0xFC	; 252
 616:	1f 4f       	sbci	r17, 0xFF	; 255
 618:	06 c0       	rjmp	.+12     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 61a:	60 81       	ld	r22, Z
 61c:	71 81       	ldd	r23, Z+1	; 0x01
 61e:	80 e0       	ldi	r24, 0x00	; 0
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 5f       	subi	r16, 0xFE	; 254
 624:	1f 4f       	sbci	r17, 0xFF	; 255
 626:	a3 01       	movw	r20, r6
 628:	f1 d0       	rcall	.+482    	; 0x80c <__ultoa_invert>
 62a:	88 2e       	mov	r8, r24
 62c:	86 18       	sub	r8, r6
 62e:	fb 2d       	mov	r31, r11
 630:	ff 77       	andi	r31, 0x7F	; 127
 632:	3f 2e       	mov	r3, r31
 634:	36 fe       	sbrs	r3, 6
 636:	0d c0       	rjmp	.+26     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 638:	23 2d       	mov	r18, r3
 63a:	2e 7f       	andi	r18, 0xFE	; 254
 63c:	a2 2e       	mov	r10, r18
 63e:	89 14       	cp	r8, r9
 640:	58 f4       	brcc	.+22     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 642:	34 fe       	sbrs	r3, 4
 644:	0b c0       	rjmp	.+22     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 646:	32 fc       	sbrc	r3, 2
 648:	09 c0       	rjmp	.+18     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 64a:	83 2d       	mov	r24, r3
 64c:	8e 7e       	andi	r24, 0xEE	; 238
 64e:	a8 2e       	mov	r10, r24
 650:	05 c0       	rjmp	.+10     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 652:	b8 2c       	mov	r11, r8
 654:	a3 2c       	mov	r10, r3
 656:	03 c0       	rjmp	.+6      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 658:	b8 2c       	mov	r11, r8
 65a:	01 c0       	rjmp	.+2      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 65c:	b9 2c       	mov	r11, r9
 65e:	a4 fe       	sbrs	r10, 4
 660:	0f c0       	rjmp	.+30     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 662:	fe 01       	movw	r30, r28
 664:	e8 0d       	add	r30, r8
 666:	f1 1d       	adc	r31, r1
 668:	80 81       	ld	r24, Z
 66a:	80 33       	cpi	r24, 0x30	; 48
 66c:	21 f4       	brne	.+8      	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 66e:	9a 2d       	mov	r25, r10
 670:	99 7e       	andi	r25, 0xE9	; 233
 672:	a9 2e       	mov	r10, r25
 674:	09 c0       	rjmp	.+18     	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 676:	a2 fe       	sbrs	r10, 2
 678:	06 c0       	rjmp	.+12     	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 67a:	b3 94       	inc	r11
 67c:	b3 94       	inc	r11
 67e:	04 c0       	rjmp	.+8      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 680:	8a 2d       	mov	r24, r10
 682:	86 78       	andi	r24, 0x86	; 134
 684:	09 f0       	breq	.+2      	; 0x688 <__LOCK_REGION_LENGTH__+0x288>
 686:	b3 94       	inc	r11
 688:	a3 fc       	sbrc	r10, 3
 68a:	10 c0       	rjmp	.+32     	; 0x6ac <__LOCK_REGION_LENGTH__+0x2ac>
 68c:	a0 fe       	sbrs	r10, 0
 68e:	06 c0       	rjmp	.+12     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 690:	b2 14       	cp	r11, r2
 692:	80 f4       	brcc	.+32     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 694:	28 0c       	add	r2, r8
 696:	92 2c       	mov	r9, r2
 698:	9b 18       	sub	r9, r11
 69a:	0d c0       	rjmp	.+26     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 69c:	b2 14       	cp	r11, r2
 69e:	58 f4       	brcc	.+22     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6a0:	b6 01       	movw	r22, r12
 6a2:	80 e2       	ldi	r24, 0x20	; 32
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	76 d0       	rcall	.+236    	; 0x794 <fputc>
 6a8:	b3 94       	inc	r11
 6aa:	f8 cf       	rjmp	.-16     	; 0x69c <__LOCK_REGION_LENGTH__+0x29c>
 6ac:	b2 14       	cp	r11, r2
 6ae:	18 f4       	brcc	.+6      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6b0:	2b 18       	sub	r2, r11
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <__LOCK_REGION_LENGTH__+0x2b8>
 6b4:	98 2c       	mov	r9, r8
 6b6:	21 2c       	mov	r2, r1
 6b8:	a4 fe       	sbrs	r10, 4
 6ba:	0f c0       	rjmp	.+30     	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 6bc:	b6 01       	movw	r22, r12
 6be:	80 e3       	ldi	r24, 0x30	; 48
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	68 d0       	rcall	.+208    	; 0x794 <fputc>
 6c4:	a2 fe       	sbrs	r10, 2
 6c6:	16 c0       	rjmp	.+44     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6c8:	a1 fc       	sbrc	r10, 1
 6ca:	03 c0       	rjmp	.+6      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6cc:	88 e7       	ldi	r24, 0x78	; 120
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6d2:	88 e5       	ldi	r24, 0x58	; 88
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	b6 01       	movw	r22, r12
 6d8:	0c c0       	rjmp	.+24     	; 0x6f2 <__LOCK_REGION_LENGTH__+0x2f2>
 6da:	8a 2d       	mov	r24, r10
 6dc:	86 78       	andi	r24, 0x86	; 134
 6de:	51 f0       	breq	.+20     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6e0:	a1 fe       	sbrs	r10, 1
 6e2:	02 c0       	rjmp	.+4      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e4:	8b e2       	ldi	r24, 0x2B	; 43
 6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>
 6e8:	80 e2       	ldi	r24, 0x20	; 32
 6ea:	a7 fc       	sbrc	r10, 7
 6ec:	8d e2       	ldi	r24, 0x2D	; 45
 6ee:	b6 01       	movw	r22, r12
 6f0:	90 e0       	ldi	r25, 0x00	; 0
 6f2:	50 d0       	rcall	.+160    	; 0x794 <fputc>
 6f4:	89 14       	cp	r8, r9
 6f6:	30 f4       	brcc	.+12     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 6f8:	b6 01       	movw	r22, r12
 6fa:	80 e3       	ldi	r24, 0x30	; 48
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	4a d0       	rcall	.+148    	; 0x794 <fputc>
 700:	9a 94       	dec	r9
 702:	f8 cf       	rjmp	.-16     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 704:	8a 94       	dec	r8
 706:	f3 01       	movw	r30, r6
 708:	e8 0d       	add	r30, r8
 70a:	f1 1d       	adc	r31, r1
 70c:	80 81       	ld	r24, Z
 70e:	b6 01       	movw	r22, r12
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	40 d0       	rcall	.+128    	; 0x794 <fputc>
 714:	81 10       	cpse	r8, r1
 716:	f6 cf       	rjmp	.-20     	; 0x704 <__LOCK_REGION_LENGTH__+0x304>
 718:	22 20       	and	r2, r2
 71a:	09 f4       	brne	.+2      	; 0x71e <__LOCK_REGION_LENGTH__+0x31e>
 71c:	4e ce       	rjmp	.-868    	; 0x3ba <vfprintf+0x4c>
 71e:	b6 01       	movw	r22, r12
 720:	80 e2       	ldi	r24, 0x20	; 32
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	37 d0       	rcall	.+110    	; 0x794 <fputc>
 726:	2a 94       	dec	r2
 728:	f7 cf       	rjmp	.-18     	; 0x718 <__LOCK_REGION_LENGTH__+0x318>
 72a:	f6 01       	movw	r30, r12
 72c:	86 81       	ldd	r24, Z+6	; 0x06
 72e:	97 81       	ldd	r25, Z+7	; 0x07
 730:	02 c0       	rjmp	.+4      	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 732:	8f ef       	ldi	r24, 0xFF	; 255
 734:	9f ef       	ldi	r25, 0xFF	; 255
 736:	2b 96       	adiw	r28, 0x0b	; 11
 738:	0f b6       	in	r0, 0x3f	; 63
 73a:	f8 94       	cli
 73c:	de bf       	out	0x3e, r29	; 62
 73e:	0f be       	out	0x3f, r0	; 63
 740:	cd bf       	out	0x3d, r28	; 61
 742:	df 91       	pop	r29
 744:	cf 91       	pop	r28
 746:	1f 91       	pop	r17
 748:	0f 91       	pop	r16
 74a:	ff 90       	pop	r15
 74c:	ef 90       	pop	r14
 74e:	df 90       	pop	r13
 750:	cf 90       	pop	r12
 752:	bf 90       	pop	r11
 754:	af 90       	pop	r10
 756:	9f 90       	pop	r9
 758:	8f 90       	pop	r8
 75a:	7f 90       	pop	r7
 75c:	6f 90       	pop	r6
 75e:	5f 90       	pop	r5
 760:	4f 90       	pop	r4
 762:	3f 90       	pop	r3
 764:	2f 90       	pop	r2
 766:	08 95       	ret

00000768 <strnlen_P>:
 768:	fc 01       	movw	r30, r24
 76a:	05 90       	lpm	r0, Z+
 76c:	61 50       	subi	r22, 0x01	; 1
 76e:	70 40       	sbci	r23, 0x00	; 0
 770:	01 10       	cpse	r0, r1
 772:	d8 f7       	brcc	.-10     	; 0x76a <strnlen_P+0x2>
 774:	80 95       	com	r24
 776:	90 95       	com	r25
 778:	8e 0f       	add	r24, r30
 77a:	9f 1f       	adc	r25, r31
 77c:	08 95       	ret

0000077e <strnlen>:
 77e:	fc 01       	movw	r30, r24
 780:	61 50       	subi	r22, 0x01	; 1
 782:	70 40       	sbci	r23, 0x00	; 0
 784:	01 90       	ld	r0, Z+
 786:	01 10       	cpse	r0, r1
 788:	d8 f7       	brcc	.-10     	; 0x780 <strnlen+0x2>
 78a:	80 95       	com	r24
 78c:	90 95       	com	r25
 78e:	8e 0f       	add	r24, r30
 790:	9f 1f       	adc	r25, r31
 792:	08 95       	ret

00000794 <fputc>:
 794:	0f 93       	push	r16
 796:	1f 93       	push	r17
 798:	cf 93       	push	r28
 79a:	df 93       	push	r29
 79c:	fb 01       	movw	r30, r22
 79e:	23 81       	ldd	r18, Z+3	; 0x03
 7a0:	21 fd       	sbrc	r18, 1
 7a2:	03 c0       	rjmp	.+6      	; 0x7aa <fputc+0x16>
 7a4:	8f ef       	ldi	r24, 0xFF	; 255
 7a6:	9f ef       	ldi	r25, 0xFF	; 255
 7a8:	2c c0       	rjmp	.+88     	; 0x802 <fputc+0x6e>
 7aa:	22 ff       	sbrs	r18, 2
 7ac:	16 c0       	rjmp	.+44     	; 0x7da <fputc+0x46>
 7ae:	46 81       	ldd	r20, Z+6	; 0x06
 7b0:	57 81       	ldd	r21, Z+7	; 0x07
 7b2:	24 81       	ldd	r18, Z+4	; 0x04
 7b4:	35 81       	ldd	r19, Z+5	; 0x05
 7b6:	42 17       	cp	r20, r18
 7b8:	53 07       	cpc	r21, r19
 7ba:	44 f4       	brge	.+16     	; 0x7cc <fputc+0x38>
 7bc:	a0 81       	ld	r26, Z
 7be:	b1 81       	ldd	r27, Z+1	; 0x01
 7c0:	9d 01       	movw	r18, r26
 7c2:	2f 5f       	subi	r18, 0xFF	; 255
 7c4:	3f 4f       	sbci	r19, 0xFF	; 255
 7c6:	31 83       	std	Z+1, r19	; 0x01
 7c8:	20 83       	st	Z, r18
 7ca:	8c 93       	st	X, r24
 7cc:	26 81       	ldd	r18, Z+6	; 0x06
 7ce:	37 81       	ldd	r19, Z+7	; 0x07
 7d0:	2f 5f       	subi	r18, 0xFF	; 255
 7d2:	3f 4f       	sbci	r19, 0xFF	; 255
 7d4:	37 83       	std	Z+7, r19	; 0x07
 7d6:	26 83       	std	Z+6, r18	; 0x06
 7d8:	14 c0       	rjmp	.+40     	; 0x802 <fputc+0x6e>
 7da:	8b 01       	movw	r16, r22
 7dc:	ec 01       	movw	r28, r24
 7de:	fb 01       	movw	r30, r22
 7e0:	00 84       	ldd	r0, Z+8	; 0x08
 7e2:	f1 85       	ldd	r31, Z+9	; 0x09
 7e4:	e0 2d       	mov	r30, r0
 7e6:	09 95       	icall
 7e8:	89 2b       	or	r24, r25
 7ea:	e1 f6       	brne	.-72     	; 0x7a4 <fputc+0x10>
 7ec:	d8 01       	movw	r26, r16
 7ee:	16 96       	adiw	r26, 0x06	; 6
 7f0:	8d 91       	ld	r24, X+
 7f2:	9c 91       	ld	r25, X
 7f4:	17 97       	sbiw	r26, 0x07	; 7
 7f6:	01 96       	adiw	r24, 0x01	; 1
 7f8:	17 96       	adiw	r26, 0x07	; 7
 7fa:	9c 93       	st	X, r25
 7fc:	8e 93       	st	-X, r24
 7fe:	16 97       	sbiw	r26, 0x06	; 6
 800:	ce 01       	movw	r24, r28
 802:	df 91       	pop	r29
 804:	cf 91       	pop	r28
 806:	1f 91       	pop	r17
 808:	0f 91       	pop	r16
 80a:	08 95       	ret

0000080c <__ultoa_invert>:
 80c:	fa 01       	movw	r30, r20
 80e:	aa 27       	eor	r26, r26
 810:	28 30       	cpi	r18, 0x08	; 8
 812:	51 f1       	breq	.+84     	; 0x868 <__ultoa_invert+0x5c>
 814:	20 31       	cpi	r18, 0x10	; 16
 816:	81 f1       	breq	.+96     	; 0x878 <__ultoa_invert+0x6c>
 818:	e8 94       	clt
 81a:	6f 93       	push	r22
 81c:	6e 7f       	andi	r22, 0xFE	; 254
 81e:	6e 5f       	subi	r22, 0xFE	; 254
 820:	7f 4f       	sbci	r23, 0xFF	; 255
 822:	8f 4f       	sbci	r24, 0xFF	; 255
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	af 4f       	sbci	r26, 0xFF	; 255
 828:	b1 e0       	ldi	r27, 0x01	; 1
 82a:	3e d0       	rcall	.+124    	; 0x8a8 <__ultoa_invert+0x9c>
 82c:	b4 e0       	ldi	r27, 0x04	; 4
 82e:	3c d0       	rcall	.+120    	; 0x8a8 <__ultoa_invert+0x9c>
 830:	67 0f       	add	r22, r23
 832:	78 1f       	adc	r23, r24
 834:	89 1f       	adc	r24, r25
 836:	9a 1f       	adc	r25, r26
 838:	a1 1d       	adc	r26, r1
 83a:	68 0f       	add	r22, r24
 83c:	79 1f       	adc	r23, r25
 83e:	8a 1f       	adc	r24, r26
 840:	91 1d       	adc	r25, r1
 842:	a1 1d       	adc	r26, r1
 844:	6a 0f       	add	r22, r26
 846:	71 1d       	adc	r23, r1
 848:	81 1d       	adc	r24, r1
 84a:	91 1d       	adc	r25, r1
 84c:	a1 1d       	adc	r26, r1
 84e:	20 d0       	rcall	.+64     	; 0x890 <__ultoa_invert+0x84>
 850:	09 f4       	brne	.+2      	; 0x854 <__ultoa_invert+0x48>
 852:	68 94       	set
 854:	3f 91       	pop	r19
 856:	2a e0       	ldi	r18, 0x0A	; 10
 858:	26 9f       	mul	r18, r22
 85a:	11 24       	eor	r1, r1
 85c:	30 19       	sub	r19, r0
 85e:	30 5d       	subi	r19, 0xD0	; 208
 860:	31 93       	st	Z+, r19
 862:	de f6       	brtc	.-74     	; 0x81a <__ultoa_invert+0xe>
 864:	cf 01       	movw	r24, r30
 866:	08 95       	ret
 868:	46 2f       	mov	r20, r22
 86a:	47 70       	andi	r20, 0x07	; 7
 86c:	40 5d       	subi	r20, 0xD0	; 208
 86e:	41 93       	st	Z+, r20
 870:	b3 e0       	ldi	r27, 0x03	; 3
 872:	0f d0       	rcall	.+30     	; 0x892 <__ultoa_invert+0x86>
 874:	c9 f7       	brne	.-14     	; 0x868 <__ultoa_invert+0x5c>
 876:	f6 cf       	rjmp	.-20     	; 0x864 <__ultoa_invert+0x58>
 878:	46 2f       	mov	r20, r22
 87a:	4f 70       	andi	r20, 0x0F	; 15
 87c:	40 5d       	subi	r20, 0xD0	; 208
 87e:	4a 33       	cpi	r20, 0x3A	; 58
 880:	18 f0       	brcs	.+6      	; 0x888 <__ultoa_invert+0x7c>
 882:	49 5d       	subi	r20, 0xD9	; 217
 884:	31 fd       	sbrc	r19, 1
 886:	40 52       	subi	r20, 0x20	; 32
 888:	41 93       	st	Z+, r20
 88a:	02 d0       	rcall	.+4      	; 0x890 <__ultoa_invert+0x84>
 88c:	a9 f7       	brne	.-22     	; 0x878 <__ultoa_invert+0x6c>
 88e:	ea cf       	rjmp	.-44     	; 0x864 <__ultoa_invert+0x58>
 890:	b4 e0       	ldi	r27, 0x04	; 4
 892:	a6 95       	lsr	r26
 894:	97 95       	ror	r25
 896:	87 95       	ror	r24
 898:	77 95       	ror	r23
 89a:	67 95       	ror	r22
 89c:	ba 95       	dec	r27
 89e:	c9 f7       	brne	.-14     	; 0x892 <__ultoa_invert+0x86>
 8a0:	00 97       	sbiw	r24, 0x00	; 0
 8a2:	61 05       	cpc	r22, r1
 8a4:	71 05       	cpc	r23, r1
 8a6:	08 95       	ret
 8a8:	9b 01       	movw	r18, r22
 8aa:	ac 01       	movw	r20, r24
 8ac:	0a 2e       	mov	r0, r26
 8ae:	06 94       	lsr	r0
 8b0:	57 95       	ror	r21
 8b2:	47 95       	ror	r20
 8b4:	37 95       	ror	r19
 8b6:	27 95       	ror	r18
 8b8:	ba 95       	dec	r27
 8ba:	c9 f7       	brne	.-14     	; 0x8ae <__ultoa_invert+0xa2>
 8bc:	62 0f       	add	r22, r18
 8be:	73 1f       	adc	r23, r19
 8c0:	84 1f       	adc	r24, r20
 8c2:	95 1f       	adc	r25, r21
 8c4:	a0 1d       	adc	r26, r0
 8c6:	08 95       	ret

000008c8 <_exit>:
 8c8:	f8 94       	cli

000008ca <__stop_program>:
 8ca:	ff cf       	rjmp	.-2      	; 0x8ca <__stop_program>
